kind: pipeline
type: docker
name: build

steps:
  - name: build application
    image: docker:19.03.12
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock
    commands:
      - |
        if [ "$DRONE_BRANCH" = "main" ]; then
          docker build --build-arg APP_ENV=main -t shopify-idp:${DRONE_COMMIT} -f Dockerfile .
        else
          docker build --build-arg APP_ENV=stage -t shopify-idp:${DRONE_COMMIT} -f Dockerfile .
        fi
trigger:
  branch:
    - sprint-*
    - main
  event:
    - push

volumes:
  - name: docker_sock
    host:
      path: /var/run/docker.sock

node:
  machine: personal-ci
  command: nl

---
kind: pipeline
type: docker
name: test
depends_on:
  - build

clone:
  disable: true

steps:
  - name: test application
    image: docker:19.03.12
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock
    commands:
      - |
        IMAGE_NAME=shopify-idp
        APP_ENV=testing
        echo "Starting test with APP_ENV=$APP_ENV"
        docker run --rm \
          -e APP_ENV=$APP_ENV \
          $IMAGE_NAME:$DRONE_COMMIT \
          sh -c "cd /var/www && composer install && ./vendor/bin/phpunit"

trigger:
  branch:
    - sprint-*
    - main
  event:
    - push

volumes:
  - name: docker_sock
    host:
      path: /var/run/docker.sock
node:
  machine: personal-ci
  command: nl

---
kind: pipeline
type: docker
name: deploy-development

depends_on:
  - test

clone:
  disable: true

steps:
  - name: deploy application
    image: docker:19.03.12
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock
    environment:
      APP_NAME: "shopify-idp"
      APP_URL: https://shop.smart2be.com
      DB_PASSWORD:
        from_secret: DB_PASSWORD
      DB_DATABASE:
        from_secret: DB_DATABASE
      SHOPIFY_CLIENT_ID:
        from_secret: SHOPIFY_CLIENT_ID
      SHOPIFY_CLIENT_SECRET:
        from_secret: SHOPIFY_CLIENT_SECRET
      SHOPIFY_REDIRECT_URI:
        from_secret: SHOPIFY_REDIRECT_URI
      SHOPIFY_SHOP_DOMAIN:
        from_secret: SHOPIFY_SHOP_DOMAIN
      SHOPIFY_AUTH_ENDPOINT:
        from_secret: SHOPIFY_AUTH_ENDPOINT
      SHOPIFY_TOKEN_ENDPOINT:
        from_secret: SHOPIFY_TOKEN_ENDPOINT
      SHOPIFY_USERINFO_ENDPOINT:
        from_secret: SHOPIFY_USERINFO_ENDPOINT
      SHOPIFY_JWKS_URI:
        from_secret: SHOPIFY_JWKS_URI
      SHOPIFY_SCOPES:
        from_secret: SHOPIFY_SCOPES
      SHOPIFY_WEBHOOK_SECRET:
        from_secret: SHOPIFY_WEBHOOK_SECRET
    commands:
      - |
        IMAGE_NAME=shopify-idp
        APP_ENV=stage
        if [ "$DRONE_BRANCH" = "main" ]; then
          APP_ENV=main
        fi
        echo "Starting deploy with APP_ENV=$APP_ENV"
        docker stop $IMAGE_NAME || true
      - |
        docker run --rm -d \
          --name $IMAGE_NAME \
          --hostname $IMAGE_NAME \
          --network proxy-network \
          -e APP_URL=$APP_URL \
          -e DB_DATABASE=$DB_DATABASE \
          -e DB_PASSWORD=$DB_PASSWORD \
          -e APP_ENV=$APP_ENV \
          -e SHOPIFY_CLIENT_ID=$SHOPIFY_CLIENT_ID \
          -e SHOPIFY_CLIENT_SECRET=$SHOPIFY_CLIENT_SECRET \
          -e SHOPIFY_REDIRECT_URI=$SHOPIFY_REDIRECT_URI \
          -e SHOPIFY_SHOP_DOMAIN=$SHOPIFY_SHOP_DOMAIN \
          -e SHOPIFY_AUTH_ENDPOINT=$SHOPIFY_AUTH_ENDPOINT \
          -e SHOPIFY_TOKEN_ENDPOINT=$SHOPIFY_TOKEN_ENDPOINT \
          -e SHOPIFY_USERINFO_ENDPOINT=$SHOPIFY_USERINFO_ENDPOINT \
          -e SHOPIFY_JWKS_URI=$SHOPIFY_JWKS_URI \
          -e SHOPIFY_WEBHOOK_SECRET=$SHOPIFY_WEBHOOK_SECRET \
          shopify-idp:$DRONE_COMMIT
      - docker exec $IMAGE_NAME sh -c "cd /var/www && chmod +x ./deploy.sh && ./deploy.sh"

trigger:
  branch:
    - sprint-*

  event:
    - push

node:
  machine: personal-ci
  command: nl

volumes:
  - name: docker_sock
    host:
      path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: deploy-production

depends_on:
  - test

clone:
  disable: true

steps:
  - name: deploy application
    image: docker:19.03.12
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock
    environment:
      APP_NAME: "shopify-idp"
      APP_URL: https://shop.smart2be.com
      DB_PASSWORD:
        from_secret: DB_PASSWORD
      DB_DATABASE:
        from_secret: DB_DATABASE
      SHOPIFY_CLIENT_ID:
        from_secret: SHOPIFY_CLIENT_ID
      SHOPIFY_CLIENT_SECRET:
        from_secret: SHOPIFY_CLIENT_SECRET
      SHOPIFY_REDIRECT_URI:
        from_secret: SHOPIFY_REDIRECT_URI
      SHOPIFY_SHOP_DOMAIN:
        from_secret: SHOPIFY_SHOP_DOMAIN
      SHOPIFY_AUTH_ENDPOINT:
        from_secret: SHOPIFY_AUTH_ENDPOINT
      SHOPIFY_TOKEN_ENDPOINT:
        from_secret: SHOPIFY_TOKEN_ENDPOINT
      SHOPIFY_USERINFO_ENDPOINT:
        from_secret: SHOPIFY_USERINFO_ENDPOINT
      SHOPIFY_JWKS_URI:
        from_secret: SHOPIFY_JWKS_URI
      SHOPIFY_SCOPES:
        from_secret: SHOPIFY_SCOPES
      SHOPIFY_WEBHOOK_SECRET:
        from_secret: SHOPIFY_WEBHOOK_SECRET
    commands:
      - |
        IMAGE_NAME=shopify-idp
        APP_ENV=production
        echo "Starting deploy with APP_ENV=$APP_ENV"
        docker stop $IMAGE_NAME || true
        docker rm $IMAGE_NAME || true
        docker run --rm -d \
          --name $IMAGE_NAME \
          --hostname $IMAGE_NAME \
          --network proxy-network \
          -e APP_URL=$APP_URL \
          -e DB_DATABASE=$DB_DATABASE \
          -e DB_PASSWORD=$DB_PASSWORD \
          -e APP_ENV=$APP_ENV \
          -e SHOPIFY_CLIENT_ID=$SHOPIFY_CLIENT_ID \
          -e SHOPIFY_CLIENT_SECRET=$SHOPIFY_CLIENT_SECRET \
          -e SHOPIFY_REDIRECT_URI=$SHOPIFY_REDIRECT_URI \
          -e SHOPIFY_SHOP_DOMAIN=$SHOPIFY_SHOP_DOMAIN \
          -e SHOPIFY_AUTH_ENDPOINT=$SHOPIFY_AUTH_ENDPOINT \
          -e SHOPIFY_TOKEN_ENDPOINT=$SHOPIFY_TOKEN_ENDPOINT \
          -e SHOPIFY_USERINFO_ENDPOINT=$SHOPIFY_USERINFO_ENDPOINT \
          -e SHOPIFY_JWKS_URI=$SHOPIFY_JWKS_URI \
          -e SHOPIFY_SCOPES=$SHOPIFY_SCOPES \
          -e SHOPIFY_WEBHOOK_SECRET=$SHOPIFY_WEBHOOK_SECRET \
          $IMAGE_NAME:$DRONE_COMMIT
        docker exec $IMAGE_NAME sh -c "cd /var/www && chmod +x ./deploy.sh && ./deploy.sh"

trigger:
  branch:
    - main
  event:
    - push

node:
  machine: personal-ci
  command: nl

volumes:
  - name: docker_sock
    host:
      path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: deploy-production-main

clone:
  disable: true

steps:
  - name: deploy application
    image: docker:19.03.12
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock
    environment:
      APP_NAME: "shopify-idp"
      APP_URL: https://shop.smart2be.com
      DB_PASSWORD:
        from_secret: DB_PASSWORD
      SHOPIFY_CLIENT_ID:
        from_secret: SHOPIFY_CLIENT_ID
      SHOPIFY_CLIENT_SECRET:
        from_secret: SHOPIFY_CLIENT_SECRET
      SHOPIFY_REDIRECT_URI:
        from_secret: SHOPIFY_REDIRECT_URI
      SHOPIFY_SHOP_DOMAIN:
        from_secret: SHOPIFY_SHOP_DOMAIN
      SHOPIFY_AUTH_ENDPOINT:
        from_secret: SHOPIFY_AUTH_ENDPOINT
      SHOPIFY_TOKEN_ENDPOINT:
        from_secret: SHOPIFY_TOKEN_ENDPOINT
      SHOPIFY_USERINFO_ENDPOINT:
        from_secret: SHOPIFY_USERINFO_ENDPOINT
      SHOPIFY_JWKS_URI:
        from_secret: SHOPIFY_JWKS_URI
      SHOPIFY_SCOPES:
        from_secret: SHOPIFY_SCOPES
      SHOPIFY_WEBHOOK_SECRET:
        from_secret: SHOPIFY_WEBHOOK_SECRET
    commands:
      - |
        IMAGE_NAME=shopify-idp
        APP_ENV=production
        echo "Starting deploy with APP_ENV=$APP_ENV"
        docker stop $IMAGE_NAME || true
        docker rm $IMAGE_NAME || true
        docker run --rm -d \
          --name $IMAGE_NAME \
          --hostname $IMAGE_NAME \
          --network proxy-network \
          -e APP_URL=$APP_URL \
          -e DB_DATABASE=$DB_DATABASE \
          -e DB_PASSWORD=$DB_PASSWORD \
          -e APP_ENV=$APP_ENV \
          -e SHOPIFY_CLIENT_ID=$SHOPIFY_CLIENT_ID \
          -e SHOPIFY_CLIENT_SECRET=$SHOPIFY_CLIENT_SECRET \
          -e SHOPIFY_REDIRECT_URI=$SHOPIFY_REDIRECT_URI \
          -e SHOPIFY_SHOP_DOMAIN=$SHOPIFY_SHOP_DOMAIN \
          -e SHOPIFY_AUTH_ENDPOINT=$SHOPIFY_AUTH_ENDPOINT \
          -e SHOPIFY_TOKEN_ENDPOINT=$SHOPIFY_TOKEN_ENDPOINT \
          -e SHOPIFY_USERINFO_ENDPOINT=$SHOPIFY_USERINFO_ENDPOINT \
          -e SHOPIFY_JWKS_URI=$SHOPIFY_JWKS_URI \
          -e SHOPIFY_SCOPES=$SHOPIFY_SCOPES \
          -e SHOPIFY_WEBHOOK_SECRET=$SHOPIFY_WEBHOOK_SECRET \
          $IMAGE_NAME:$DRONE_COMMIT
        docker exec $IMAGE_NAME sh -c "cd /var/www && chmod +x ./deploy.sh && ./deploy.sh"
trigger:
  branch:
    - main
  event:
    - promote
  target:
    - production

node:
  machine: personal-ci
  command: nl

volumes:
  - name: docker_sock
    host:
      path: /var/run/docker.sock
